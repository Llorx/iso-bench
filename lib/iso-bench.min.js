"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=new Function("try {return this===window;}catch(e){ return false;}");class e{_browserWorker=null;_nodeWorker=null;constructor(e){t()?(e=`\nconst _d_ñ = v => v;\nconst _now_ñ = performance.now;\nconst _dif_ñ = d => _now_ñ() - d;\nconsole.log = (...args) => {\n    parent.postMessage({ log: args });\n};\n\r\n${e}`,this._browserWorker=new Worker(`data:text/javascript;charset=UTF-8,${encodeURIComponent(e)}`)):(e=`\nconst parent = require("worker_threads").parentPort;\nconst performance = require("perf_hooks").performance;\nconst _d_ñ = v => require("v8").deserialize(v);\nconst _now_ñ = process.hrtime.bigint;\nconst _dif_ñ = d => Number(_now_ñ() - d) / 1000000;\nconsole.log = (...args) => {\n    parent.postMessage({ log: args });\n};\nconst close = process.exit;\n\r\n${e}`,this._nodeWorker=new(require("worker_threads").Worker)(e,{eval:!0}))}addEventListener(t,e){this._browserWorker?this._browserWorker.addEventListener(t,e):this._nodeWorker.on(t,e)}postMessage(t){this._browserWorker?this._browserWorker.postMessage(t):this._nodeWorker.postMessage(require("v8").serialize(t))}}function s(t){return"clear"in t}function r(t){let e=t.toString(),s=e.substring(e.indexOf("(")+1,e.indexOf(")")).split(",").map((t=>t.trim())).filter((t=>!!t));e.startsWith("function")?e=e.substring(e.indexOf("{")+1,e.lastIndexOf("}")).trim():(e=e.substring(e.indexOf("=>")+2).trim(),e.startsWith("{")&&e.endsWith("}")&&(e=e.substring(1,e.length-1).trim()));let r=[];for(let t=0;t<s.length;t++)r.push(`let ${s[t]} = _args_ñ[${t}];`);return{args:s,body:e,evalArgs:r.join("\r\n")}}exports.IsoBench=void 0,function(t){let n;!function(t){t.WORSE="WORSE",t.BEST="BEST",t.COMPLETED="[TESTS COMPLETED]"}(n=t.STRINGS||(t.STRINGS={}));t.Scope=class{_args;_setup;_scripts=[];_doneScripts=[];_loggedScripts=new Set;_logData=[];_running=0;_endCb=null;options;started=!1;constructor(t={},e,...s){this.options={parallel:1,ms:1e3,...t},this._setup=e?`let _args_ñ = await eval(${String(e)})(..._data_ñ.args);`:"",this._args=s}add(t,e){let s={name:t,samples:0,opMs:-1,totalTime:0,cycles:100,script:r(e)};return this._scripts.push(s),this._logData.push(s),this}log(...t){return this._logData.push({log:t}),this}output(...t){return this._logData.push({log:t,clear:!1}),this}result(...t){return this._logData.push({log:t,clear:!0}),this}run(){return new Promise(((t,e)=>{this.started?e(new Error("Already running")):(this.started=!0,this._endCb=t,this._checkOutput(),this._next())}))}_logPack(t){let e=this._doneScripts.slice();if(!t)for(let t of this._loggedScripts)e.splice(e.indexOf(t),1);let s=e.map((t=>t.opMs)),r=Math.min(...s.filter((t=>!!t))),o=Math.max(...s.filter((t=>!!t)));for(let s of e)this._loggedScripts.add(s),t&&s.opMs>0&&(s.log.push(`${(s.opMs/r).toFixed(3)}x`),s.log.push(`${s.opMs===r?n.WORSE:""}${s.opMs===o?n.BEST:""}`)),console.log(...s.log);t&&(this._doneScripts.splice(0),this._loggedScripts.clear())}_checkOutput(){for(;this._logData.length>0&&this._logData[0].log;)!("script"in this._logData[0])&&this._logData[0].log.length>0&&console.log(...this._logData[0].log),s(this._logData[0])&&this._logPack(this._logData[0].clear),this._logData.shift()}_next(){if(this._running<this.options.parallel){let t=this._scripts.shift();t?this._runWorker(t):(this._logPack(!1),console.log(n.COMPLETED),this._endCb&&this._endCb())}}_getWorkerScript(t){return`parent.addEventListener("message", async _event_ñ => {\n                try {\n                    const _data_ñ = _d_ñ(_event_ñ.data);\n                    ${this._setup}\n                    ${t.script.evalArgs}\n                    const _n_ñ = _now_ñ();\n                    for (let _i_ñ = 0; _i_ñ < ${t.cycles}; _i_ñ++) {\n                        ${t.script.body}\n                    }\n                    const _diff_ñ = _dif_ñ(_n_ñ);\n                    parent.postMessage({ diff: _diff_ñ });\n                } catch (e) {\n                    parent.postMessage({ error: String(e) });\n                }\n                close();\n            });`}_checkDataResult(t,e){if("log"in e)console.log(...e.log);else{if(this._running--,"error"in e)t.log=[t.name,"-",e.error],t.opMs=0,this._doneScripts.push(t),this._checkOutput();else{let s=e.diff;if(s<50){let e=50/s;t.cycles=Math.round(t.cycles*(e||50)),this._scripts.unshift(t)}else{t.samples++;let e=t.cycles/s;t.opMs=t.opMs<0?e:(t.opMs+e)/2,t.totalTime+=s,t.totalTime>this.options.ms?(t.log=[t.name,"-",Math.round(1e3*t.opMs).toLocaleString(),"op/s.",t.samples,"workers in",Math.round(t.totalTime),"ms."],this._doneScripts.push(t),this._checkOutput()):this._scripts.unshift(t)}}this._next()}}_runWorker(t){this._running++;let s=new e(this._getWorkerScript(t));s.addEventListener("message",(e=>{e.data?this._checkDataResult(t,e.data):this._checkDataResult(t,e)})),s.addEventListener("error",console.error),s.postMessage({args:this._args||[]})}}}(exports.IsoBench||(exports.IsoBench={}));
